---
import { Icon } from 'astro-icon/components';
const links = [
  { href:'/#about', label:'About' },
  { href:'/#experience', label:'Experience' },
  { href:'/#projects', label:'Projects' },
  { href:'/blog', label:'Blog' },
  { href:'/#contact', label:'Contact' }
];
---
<header class="sticky top-0 z-50 backdrop-blur bg-white/60 dark:bg-black/30 border-b border-white/10">
  <div class="container flex items-center justify-between h-16">
    <a href="/" class="flex items-center gap-2 font-extrabold text-lg hover:opacity-80 transition">
      <div class="w-7 h-7 rounded-xl bg-gradient-to-br from-brand-red to-red-400 flex items-center justify-center text-white font-bold text-sm">
        K
      </div>
      <span class="hidden sm:inline">Koresha</span>
    </a>
    <nav class="hidden md:flex items-center gap-6">
      {links.map(l => 
        <a href={l.href} class="hover:opacity-80 transition font-medium text-sm">{l.label}</a>
      )}
    </nav>
    <div class="flex items-center gap-2">
      <button id="themeToggle" class="rounded-xl p-2 hover:bg-black/5 dark:hover:bg-white/10" aria-label="Toggle theme">
        <Icon name="solar:sun-2-outline" class="w-5 h-5 dark:hidden"/>
        <Icon name="solar:moon-outline" class="w-5 h-5 hidden dark:block"/>
      </button>
      <button id="mobileMenuToggle" class="md:hidden rounded-xl p-2 hover:bg-black/5 dark:hover:bg-white/10" aria-label="Toggle menu">
        <Icon name="heroicons:bars-3" class="w-5 h-5"/>
      </button>
    </div>
  </div>
  
  <!-- Mobile Menu -->
  <div id="mobileMenu" class="hidden md:hidden border-t border-white/10 bg-white/80 dark:bg-black/80 backdrop-blur">
    <div class="container py-4">
      <nav class="flex flex-col gap-3">
        {links.map(l => 
          <a href={l.href} class="py-2 hover:opacity-80 transition font-medium text-sm border-b border-gray-200/50 dark:border-gray-700/50 last:border-0">{l.label}</a>
        )}
      </nav>
    </div>
  </div>
</header>

<script>
  (function(){
    const root = document.documentElement;
    const key='theme';
    
    const set = (v) => { 
      root.dataset.theme = v; 
      localStorage.setItem(key,v); 
    };
    
    const init = () => {
      const saved = localStorage.getItem(key);
      if(saved) {
        set(saved);
      } else if(window.matchMedia('(prefers-color-scheme: dark)').matches) {
        set('dark');
      } else {
        set('light');
      }
    };
    
    const toggle = () => {
      const current = root.dataset.theme;
      set(current === 'dark' ? 'light' : 'dark');
    };
    
    // Initialize immediately
    init();
    
    // Setup theme toggle when DOM is ready
    document.addEventListener('DOMContentLoaded', () => {
      const btn = document.getElementById('themeToggle');
      if(btn) {
        btn.addEventListener('click', toggle);
      }
      
      // Setup mobile menu toggle
      const mobileMenuToggle = document.getElementById('mobileMenuToggle');
      const mobileMenu = document.getElementById('mobileMenu');
      
      if(mobileMenuToggle && mobileMenu) {
        mobileMenuToggle.addEventListener('click', () => {
          mobileMenu.classList.toggle('hidden');
        });
        
        // Close menu when clicking on a link
        const mobileLinks = mobileMenu.querySelectorAll('a');
        mobileLinks.forEach(link => {
          link.addEventListener('click', () => {
            mobileMenu.classList.add('hidden');
          });
        });
      }
    });
    
    // Fallback: setup immediately if DOM is already loaded
    if(document.readyState !== 'loading') {
      const btn = document.getElementById('themeToggle');
      if(btn) {
        btn.addEventListener('click', toggle);
      }
      
      // Setup mobile menu toggle
      const mobileMenuToggle = document.getElementById('mobileMenuToggle');
      const mobileMenu = document.getElementById('mobileMenu');
      
      if(mobileMenuToggle && mobileMenu) {
        mobileMenuToggle.addEventListener('click', () => {
          mobileMenu.classList.toggle('hidden');
        });
        
        // Close menu when clicking on a link
        const mobileLinks = mobileMenu.querySelectorAll('a');
        mobileLinks.forEach(link => {
          link.addEventListener('click', () => {
            mobileMenu.classList.add('hidden');
          });
        });
      }
    }
  })();
</script>
